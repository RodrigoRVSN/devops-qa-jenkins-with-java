pipeline {
  agent any
  
  stages {
    stage('Build') {
      when { branch "main" }
      steps {
        script { currentBuild.description = "Version: ${VERSION_TAG}" }
        sh "git config --global --add safe.directory ${WORKSPACE}"
        sh "which docker"
        sh "docker build -t ${APP_NAME}:${VERSION_TAG} ."
      }
    }
    stage('Publish') {
      when { branch "main" }
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker_credentials', passwordVariable: 'ARTIFACTORY_PASSWORD', usernameVariable: 'ARTIFACTORY_USER')]) {
          sh "docker login -u '${ARTIFACTORY_USER}' -p '${ARTIFACTORY_PASSWORD}' ${DOCKER_REGISTRY}"
          sh "docker tag ${APP_NAME}:${VERSION_TAG} ${DOCKER_REGISTRY}/${APP_NAME}:${VERSION_TAG}"
          sh "docker push ${DOCKER_REGISTRY}/${APP_NAME}:${VERSION_TAG}"
        }
      }
    }
  
    stage('Start container') {
      steps {
        sh 'docker-compose up -d --wait'
        sh 'docker-compose ps'
      }
    }
  
    stage('Run tests against the container') {
      steps {
        sleep 5
        sh 'curl http://localhost:9090'
      }
    }
  }
  
}